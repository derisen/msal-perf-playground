# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: E2E

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-e2e:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [ 16 ]

    name: Node v${{ matrix.node }}

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node }}

    - name: Install Sample
      working-directory: web-app
      run: npm install

    - name: E2E Tests - S1
      working-directory: web-app
      timeout-minutes: 10
      env:
        AAD_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
        AAD_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
        AAD_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
        AAD_TEST_USER_USERNAME: ${{ secrets.AAD_TEST_USER_USERNAME }}
        AAD_TEST_USER_PASSWORD: ${{ secrets.AAD_TEST_USER_PASSWORD }}
        SCENARIO: "S1"
      run: npm test

    - name: E2E Tests - S2
      working-directory: web-app
      timeout-minutes: 10
      env:
        AAD_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
        AAD_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
        AAD_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
        AAD_TEST_USER_USERNAME: ${{ secrets.AAD_TEST_USER_USERNAME }}
        AAD_TEST_USER_PASSWORD: ${{ secrets.AAD_TEST_USER_PASSWORD }}
        SCENARIO: "S2"
      run: npm test

    - name: E2E Tests - S3
      working-directory: web-app
      timeout-minutes: 10
      env:
        AAD_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
        AAD_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
        AAD_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
        AAD_TEST_USER_USERNAME: ${{ secrets.AAD_TEST_USER_USERNAME }}
        AAD_TEST_USER_PASSWORD: ${{ secrets.AAD_TEST_USER_PASSWORD }}
        SCENARIO: "S3"
      run: npm test


    - name: E2E Tests - S4
      working-directory: web-app
      timeout-minutes: 10
      env:
        AAD_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
        AAD_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
        AAD_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
        AAD_TEST_USER_USERNAME: ${{ secrets.AAD_TEST_USER_USERNAME }}
        AAD_TEST_USER_PASSWORD: ${{ secrets.AAD_TEST_USER_PASSWORD }}
        SCENARIO: "S4"
      run: npm test

    - name: E2E Tests - S5
      working-directory: web-app
      timeout-minutes: 10
      env:
        AAD_CLIENT_SECRET: ${{ secrets.AAD_CLIENT_SECRET }}
        AAD_TENANT_ID: ${{ secrets.AAD_TENANT_ID }}
        AAD_CLIENT_ID: ${{ secrets.AAD_CLIENT_ID }}
        AAD_TEST_USER_USERNAME: ${{ secrets.AAD_TEST_USER_USERNAME }}
        AAD_TEST_USER_PASSWORD: ${{ secrets.AAD_TEST_USER_PASSWORD }}
        SCENARIO: "S5"
      run: npm test

    - name: Upload E2E Test Screenshots
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: e2e-test-screenshots
        path: web-app/test/screenshots